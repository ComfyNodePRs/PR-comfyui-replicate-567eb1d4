{
    "url": "https://replicate.com/fofr/controlnet-preprocessors",
    "owner": "fofr",
    "name": "controlnet-preprocessors",
    "description": "Canny, soft edge, depth, lineart, segmentation, pose, etc",
    "visibility": "public",
    "github_url": "https://github.com/fofr/cog-controlnet-preprocessors",
    "paper_url": null,
    "license_url": "https://github.com/fofr/cog-controlnet-preprocessors/blob/main/LICENSE",
    "run_count": 0,
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/fb14a12a-692b-4452-82b9-f91788bdf406/image_grid_corrected.png",
    "default_example": {
        "id": "54kd4flb5sdiepnoqgs7raf2wa",
        "model": "fofr/controlnet-preprocessors",
        "version": "f6584ef76cf07a2014ffe1e9bdb1a5cfa714f031883ab43f8d4b05506625988e",
        "status": "succeeded",
        "input": {
            "hed": true,
            "sam": true,
            "mlsd": true,
            "pidi": true,
            "canny": true,
            "image": "https://replicate.delivery/pbxt/JrCCMJ7WAdjQSIkZUQrUkOmyDeFhkRkgQgH1S3QvryX8Iypg/IMG_7845.jpeg",
            "leres": true,
            "midas": true,
            "content": true,
            "lineart": true,
            "open_pose": true,
            "normal_bae": true,
            "face_detector": true,
            "lineart_anime": true
        },
        "output": [
            "https://replicate.delivery/pbxt/uw93lneIWuUTMCo5rrKKTTDUAu6XbNImxkZ4hfuwZVMLgN3RA/canny.png",
            "https://replicate.delivery/pbxt/zs4XRbOlkxZeZaoZ52xnXe48s18KyBTVf4bfZRJhtfokBs5OC/content.png",
            "https://replicate.delivery/pbxt/QhUeh3vdAuU2H6ykifMReU14F6zm4IoeqRfOrCOfDTydDYzdE/face_detector.png",
            "https://replicate.delivery/pbxt/hwMZ86nAfbxWXKxAemdIOz6umijHKz7HTUXcVlqnuuuNgN3RA/hed.png",
            "https://replicate.delivery/pbxt/JyyRt4DuftzAbyghuqaRjSjhsaNqQF5fbdizkqAdaNQNgN3RA/midas.png",
            "https://replicate.delivery/pbxt/IpkTd18fexldvkpJWhYNJQZ5EnukEfIeukLTi1JfpE7wBs5OC/mlsd.png",
            "https://replicate.delivery/pbxt/T5HOBsOKHHqMNVTrLeOKci4jGfkyfeSsstGYVwgSglc5A2cHB/open_pose.png",
            "https://replicate.delivery/pbxt/hMP1a8Y41vIoHBDEtN02eE6gCT41LXXebtcJh108fwbcAbujA/pidi.png",
            "https://replicate.delivery/pbxt/2J93cnvbxxpdMhQbFLWUvsEZcSStPahCj3Ni73GkQhyDYzdE/normal_bae.png",
            "https://replicate.delivery/pbxt/lf9Y6I3bBPVRN6a6ffVKlvjqrcxBVoQZnckerKNfnVM9Bs5OC/lineart.png",
            "https://replicate.delivery/pbxt/dCeKSeaACpgEuUdemacT4S7YfEBxf44vBE1xsueeg61zHwm7IA/lineart_anime.png",
            "https://replicate.delivery/pbxt/fdBSo7qeUFodVU4IP6cnyPOEULcKogpk2DCCTkUZcZUQgN3RA/sam.png",
            "https://replicate.delivery/pbxt/Y5S0q7BS7zZ8OxOLTNQ67QBhFsPjiaOzuPRRPcAJoXIEYzdE/leres.png"
        ],
        "logs": "Processing image with canny\nProcessing image with content\nProcessing image with face_detector\nE0000 00:00:1699685889.055007     259 gl_context.cc:408] INTERNAL: ; RET_CHECK failure (mediapipe/gpu/gl_context_egl.cc:303) successeglMakeCurrent() returned error 0x3008;  (entering GL context)\nE0000 00:00:1699685889.055045     259 gl_context.cc:408] INTERNAL: ; RET_CHECK failure (mediapipe/gpu/gl_context_egl.cc:303) successeglMakeCurrent() returned error 0x3008;  (entering GL context)\nE0000 00:00:1699685889.055053     259 gl_context.cc:408] INTERNAL: ; RET_CHECK failure (mediapipe/gpu/gl_context_egl.cc:303) successeglMakeCurrent() returned error 0x3008;  (entering GL context)\nProcessing image with hed\nProcessing image with midas\nProcessing image with mlsd\nProcessing image with open_pose\nProcessing image with pidi\nProcessing image with normal_bae\nProcessing image with lineart\nProcessing image with lineart_anime\nProcessing image with sam\nProcessing image with leres",
        "error": null,
        "metrics": {
            "predict_time": 16.501693,
            "total_time": 16.477354
        },
        "created_at": "2023-11-11T06:58:08.625273Z",
        "started_at": "2023-11-11T06:58:08.600934Z",
        "completed_at": "2023-11-11T06:58:25.102627Z",
        "urls": {
            "get": "https://api.replicate.com/v1/predictions/54kd4flb5sdiepnoqgs7raf2wa",
            "cancel": "https://api.replicate.com/v1/predictions/54kd4flb5sdiepnoqgs7raf2wa/cancel"
        }
    },
    "latest_version": {
        "id": "f6584ef76cf07a2014ffe1e9bdb1a5cfa714f031883ab43f8d4b05506625988e",
        "created_at": "2023-11-11T00:24:53.989632+00:00",
        "cog_version": "0.8.6",
        "openapi_schema": {
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "paths": {
                "/": {
                    "get": {
                        "summary": "Root",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Root  Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "root__get"
                    }
                },
                "/shutdown": {
                    "post": {
                        "summary": "Start Shutdown",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Start Shutdown Shutdown Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "start_shutdown_shutdown_post"
                    }
                },
                "/predictions": {
                    "post": {
                        "summary": "Predict",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PredictionRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "/health-check": {
                    "get": {
                        "summary": "Healthcheck",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Healthcheck Health Check Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "healthcheck_health_check_get"
                    }
                },
                "/predictions/{prediction_id}": {
                    "put": {
                        "summary": "Predict Idempotent",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            },
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model (idempotent creation).",
                        "operationId": "predict_idempotent_predictions__prediction_id__put",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/PredictionRequest"
                                            }
                                        ],
                                        "title": "Prediction Request"
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                },
                "/predictions/{prediction_id}/cancel": {
                    "post": {
                        "summary": "Cancel",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            }
                        ],
                        "description": "Cancel a running prediction",
                        "operationId": "cancel_predictions__prediction_id__cancel_post"
                    }
                }
            },
            "openapi": "3.0.2",
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "title": "Input",
                        "required": [
                            "image"
                        ],
                        "properties": {
                            "hed": {
                                "type": "boolean",
                                "title": "Hed",
                                "default": true,
                                "x-order": 4,
                                "description": "Run HED detection"
                            },
                            "sam": {
                                "type": "boolean",
                                "title": "Sam",
                                "default": true,
                                "x-order": 12,
                                "description": "Run Sam detection"
                            },
                            "mlsd": {
                                "type": "boolean",
                                "title": "Mlsd",
                                "default": true,
                                "x-order": 6,
                                "description": "Run MLSD detection"
                            },
                            "pidi": {
                                "type": "boolean",
                                "title": "Pidi",
                                "default": true,
                                "x-order": 8,
                                "description": "Run PidiNet detection"
                            },
                            "canny": {
                                "type": "boolean",
                                "title": "Canny",
                                "default": true,
                                "x-order": 1,
                                "description": "Run canny edge detection"
                            },
                            "image": {
                                "type": "string",
                                "title": "Image",
                                "format": "uri",
                                "x-order": 0,
                                "description": "Image to preprocess"
                            },
                            "leres": {
                                "type": "boolean",
                                "title": "Leres",
                                "default": true,
                                "x-order": 13,
                                "description": "Run Leres detection"
                            },
                            "midas": {
                                "type": "boolean",
                                "title": "Midas",
                                "default": true,
                                "x-order": 5,
                                "description": "Run Midas detection"
                            },
                            "content": {
                                "type": "boolean",
                                "title": "Content",
                                "default": true,
                                "x-order": 2,
                                "description": "Run content shuffle detection"
                            },
                            "lineart": {
                                "type": "boolean",
                                "title": "Lineart",
                                "default": true,
                                "x-order": 10,
                                "description": "Run Lineart detection"
                            },
                            "open_pose": {
                                "type": "boolean",
                                "title": "Open Pose",
                                "default": true,
                                "x-order": 7,
                                "description": "Run Openpose detection"
                            },
                            "normal_bae": {
                                "type": "boolean",
                                "title": "Normal Bae",
                                "default": true,
                                "x-order": 9,
                                "description": "Run NormalBae detection"
                            },
                            "face_detector": {
                                "type": "boolean",
                                "title": "Face Detector",
                                "default": true,
                                "x-order": 3,
                                "description": "Run face detection"
                            },
                            "lineart_anime": {
                                "type": "boolean",
                                "title": "Lineart Anime",
                                "default": true,
                                "x-order": 11,
                                "description": "Run LineartAnime detection"
                            }
                        }
                    },
                    "Output": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "title": "Output"
                    },
                    "Status": {
                        "enum": [
                            "starting",
                            "processing",
                            "succeeded",
                            "canceled",
                            "failed"
                        ],
                        "type": "string",
                        "title": "Status",
                        "description": "An enumeration."
                    },
                    "WebhookEvent": {
                        "enum": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "type": "string",
                        "title": "WebhookEvent",
                        "description": "An enumeration."
                    },
                    "ValidationError": {
                        "type": "object",
                        "title": "ValidationError",
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "properties": {
                            "loc": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location"
                            },
                            "msg": {
                                "type": "string",
                                "title": "Message"
                            },
                            "type": {
                                "type": "string",
                                "title": "Error Type"
                            }
                        }
                    },
                    "PredictionRequest": {
                        "type": "object",
                        "title": "PredictionRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "start",
                                    "output",
                                    "logs",
                                    "completed"
                                ]
                            }
                        }
                    },
                    "PredictionResponse": {
                        "type": "object",
                        "title": "PredictionResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "HTTPValidationError": {
                        "type": "object",
                        "title": "HTTPValidationError",
                        "properties": {
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail"
                            }
                        }
                    }
                }
            }
        }
    }
}