{
    "url": "https://replicate.com/mistralai/mixtral-8x7b-instruct-v0.1",
    "owner": "mistralai",
    "name": "mixtral-8x7b-instruct-v0.1",
    "description": "The Mixtral-8x7B-instruct-v0.1 Large Language Model (LLM) is a pretrained generative Sparse Mixture of Experts tuned to be a helpful assistant.",
    "visibility": "public",
    "github_url": "https://github.com/nateraw/replicate-examples/tree/main/mixtral-vllm",
    "paper_url": null,
    "license_url": "https://choosealicense.com/licenses/apache-2.0/",
    "run_count": 8505435,
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/802d34fe-29b9-4079-ad16-b4333788e539/mixtral.png",
    "default_example": {
        "id": "7xg537tbifojej65lk46tfzevu",
        "model": "mistralai/mixtral-8x7b-instruct-v0.1",
        "version": "7b3212fbaf88310cfef07a061ce94224e82efc8403c26fc67e8f6c065de51f21",
        "status": "succeeded",
        "input": {
            "top_k": 50,
            "top_p": 0.9,
            "prompt": "Write a bedtime story about neural networks I can read to my toddler",
            "temperature": 0.6,
            "max_new_tokens": 1024,
            "prompt_template": "<s>[INST] {prompt} [/INST] ",
            "presence_penalty": 0,
            "frequency_penalty": 0
        },
        "output": [
            "",
            "",
            "",
            "ðŸŒ™",
            " Bed",
            "time",
            " Story",
            ":",
            " The",
            " Dream",
            "land",
            " Ne",
            "ural",
            " Network",
            " ",
            "",
            "",
            "",
            "ðŸŒ™",
            "\n",
            "\n",
            "Once",
            " upon",
            " a",
            " time",
            ",",
            " in",
            " a",
            " land",
            " called",
            " Dream",
            "land",
            ",",
            " there",
            " was",
            " a",
            " magical",
            " network",
            " of",
            " stars",
            " called",
            " the",
            " Ne",
            "ural",
            " Network",
            ".",
            " The",
            " Ne",
            "ural",
            " Network",
            " was",
            " special",
            " because",
            " it",
            " was",
            " made",
            " up",
            " of",
            " many",
            " tiny",
            " stars",
            " called",
            " neur",
            "ons",
            ",",
            " and",
            " they",
            " all",
            " worked",
            " together",
            " to",
            " help",
            " the",
            " people",
            " of",
            " Dream",
            "land",
            " have",
            " sweet",
            " dreams",
            ".",
            "\n",
            "\n",
            "Each",
            " night",
            ",",
            " when",
            " the",
            " people",
            " of",
            " Dream",
            "land",
            " closed",
            " their",
            " eyes",
            " to",
            " sleep",
            ",",
            " they",
            " would",
            " send",
            " their",
            " dreams",
            " up",
            " into",
            " the",
            " sky",
            ",",
            " where",
            " the",
            " Ne",
            "ural",
            " Network",
            " would",
            " catch",
            " them",
            " and",
            " transform",
            " them",
            " into",
            " beautiful",
            ",",
            " peaceful",
            " vis",
            "ions",
            ".",
            "\n",
            "\n",
            "The",
            " Ne",
            "ural",
            " Network",
            " had",
            " many",
            " layers",
            ",",
            " just",
            " like",
            " a",
            " cake",
            ".",
            " The",
            " first",
            " layer",
            " was",
            " called",
            " the",
            " Input",
            " L",
            "ayer",
            ",",
            " where",
            " all",
            " the",
            " dreams",
            " would",
            " enter",
            " and",
            " be",
            " greeted",
            " by",
            " the",
            " friendly",
            " neur",
            "ons",
            ".",
            " The",
            " Input",
            " L",
            "ayer",
            " would",
            " then",
            " pass",
            " the",
            " dreams",
            " along",
            " to",
            " the",
            " next",
            " layer",
            ",",
            " called",
            " the",
            " H",
            "idden",
            " L",
            "ayer",
            ".",
            "\n",
            "\n",
            "The",
            " H",
            "idden",
            " L",
            "ayer",
            " was",
            " a",
            " very",
            " busy",
            " place",
            ",",
            " where",
            " the",
            " neur",
            "ons",
            " would",
            " take",
            " the",
            " dreams",
            " and",
            " make",
            " them",
            " even",
            " more",
            " beautiful",
            ".",
            " They",
            " would",
            " add",
            " colors",
            ",",
            " shapes",
            ",",
            " and",
            " happy",
            " thoughts",
            ",",
            " making",
            " sure",
            " the",
            " dreams",
            " were",
            " just",
            " right",
            " for",
            " the",
            " dream",
            "ers",
            ".",
            "\n",
            "\n",
            "After",
            " the",
            " H",
            "idden",
            " L",
            "ayer",
            ",",
            " the",
            " dreams",
            " would",
            " go",
            " to",
            " the",
            " Output",
            " L",
            "ayer",
            ",",
            " where",
            " they",
            " would",
            " be",
            " sent",
            " back",
            " down",
            " to",
            " the",
            " people",
            " of",
            " Dream",
            "land",
            ".",
            " The",
            " Output",
            " L",
            "ayer",
            " made",
            " sure",
            " that",
            " the",
            " dreams",
            " were",
            " perfect",
            ",",
            " with",
            " just",
            " the",
            " right",
            " amount",
            " of",
            " sweet",
            "ness",
            " and",
            " wonder",
            ".",
            "\n",
            "\n",
            "One",
            " night",
            ",",
            " a",
            " little",
            " girl",
            " named",
            " Lily",
            " had",
            " trouble",
            " sleeping",
            ".",
            " She",
            " couldn",
            "'",
            "t",
            " stop",
            " thinking",
            " about",
            " her",
            " lost",
            " t",
            "ed",
            "dy",
            " bear",
            ",",
            " and",
            " she",
            " felt",
            " sad",
            " and",
            " lonely",
            ".",
            " The",
            " Ne",
            "ural",
            " Network",
            " saw",
            " Lily",
            "'",
            "s",
            " sad",
            "ness",
            " and",
            " knew",
            " just",
            " what",
            " to",
            " do",
            ".",
            "\n",
            "\n",
            "The",
            " Input",
            " L",
            "ayer",
            " welcomed",
            " Lily",
            "'",
            "s",
            " dream",
            " and",
            " passed",
            " it",
            " along",
            " to",
            " the",
            " H",
            "idden",
            " L",
            "ayer",
            ".",
            " The",
            " neur",
            "ons",
            " in",
            " the",
            " H",
            "idden",
            " L",
            "ayer",
            " added",
            " warm",
            ",",
            " co",
            "zy",
            " thoughts",
            " and",
            " images",
            " of",
            " t",
            "ed",
            "dy",
            " bears",
            " to",
            " Lily",
            "'",
            "s",
            " dream",
            ".",
            " They",
            " made",
            " sure",
            " it",
            " was",
            " just",
            " right",
            " for",
            " her",
            ".",
            "\n",
            "\n",
            "The",
            " Output",
            " L",
            "ayer",
            " then",
            " sent",
            " the",
            " dream",
            " back",
            " down",
            " to",
            " Lily",
            ",",
            " and",
            " she",
            " found",
            " herself",
            " c",
            "udd",
            "ling",
            " her",
            " t",
            "ed",
            "dy",
            " bear",
            " in",
            " a",
            " soft",
            ",",
            " warm",
            " bed",
            ".",
            " Lily",
            " smiled",
            " and",
            " drift",
            "ed",
            " off",
            " to",
            " sleep",
            ",",
            " feeling",
            " happy",
            " and",
            " safe",
            ".",
            "\n",
            "\n",
            "From",
            " that",
            " night",
            " on",
            ",",
            " Lily",
            " always",
            " had",
            " sweet",
            " dreams",
            ",",
            " thanks",
            " to",
            " the",
            " magical",
            " Ne",
            "ural",
            " Network",
            " in",
            " Dream",
            "land",
            ".",
            " And",
            " every",
            " night",
            ",",
            " the",
            " Ne",
            "ural",
            " Network",
            " would",
            " help",
            " the",
            " people",
            " of",
            " Dream",
            "land",
            " have",
            " the",
            " most",
            " wonderful",
            " dreams",
            ",",
            " making",
            " their",
            " world",
            " a",
            " happ",
            "ier",
            ",",
            " more",
            " peaceful",
            " place",
            ".",
            "\n",
            "\n",
            "And",
            " as",
            " the",
            " sun",
            " rose",
            ",",
            " the",
            " Ne",
            "ural",
            " Network",
            " would",
            " rest",
            ",",
            " waiting",
            " for",
            " the",
            " night",
            " to",
            " come",
            " again",
            ",",
            " so",
            " it",
            " could",
            " work",
            " its",
            " magic",
            " once",
            " more",
            ".",
            "\n",
            "\n",
            "",
            "",
            "",
            "ðŸŒŸ",
            " The",
            " End",
            " ",
            "",
            "",
            "",
            "ðŸŒŸ",
            "\n",
            "\n",
            "Now",
            " it",
            "'",
            "s",
            " time",
            " to",
            " close",
            " your",
            " eyes",
            " and",
            " let",
            " the",
            " Ne",
            "ural",
            " Network",
            " in",
            " your",
            " brain",
            " help",
            " you",
            " have",
            " sweet",
            " dreams",
            " too",
            ".",
            " Good",
            "night",
            "!",
            " ",
            "",
            "",
            "",
            "ðŸ˜´",
            ""
        ],
        "logs": "INFO 12-22 17:35:35 async_llm_engine.py:379] Received request 0: prompt: '<s>[INST] Write a bedtime story about neural networks I can read to my toddler [/INST] ', sampling params: SamplingParams(n=1, best_of=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.6, top_p=0.9, top_k=50, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=['</s>'], stop_token_ids=[], ignore_eos=False, max_tokens=1024, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True), prompt token ids: None.\nINFO 12-22 17:35:35 llm_engine.py:649] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%\nINFO 12-22 17:35:40 llm_engine.py:649] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 36.4 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%\nINFO 12-22 17:35:45 llm_engine.py:649] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 36.0 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%\nINFO 12-22 17:35:50 llm_engine.py:649] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 35.9 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.1%, CPU KV cache usage: 0.0%\nINFO 12-22 17:35:51 async_llm_engine.py:111] Finished request 0.\ngeneration took 16.435s",
        "error": null,
        "metrics": {
            "predict_time": 16.44726,
            "total_time": 212.763218
        },
        "created_at": "2023-12-22T17:32:18.902523Z",
        "started_at": "2023-12-22T17:35:35.218481Z",
        "completed_at": "2023-12-22T17:35:51.665741Z",
        "urls": {
            "stream": "https://streaming-api.svc.us.c.replicate.net/v1/predictions/7xg537tbifojej65lk46tfzevu",
            "get": "https://api.replicate.com/v1/predictions/7xg537tbifojej65lk46tfzevu",
            "cancel": "https://api.replicate.com/v1/predictions/7xg537tbifojej65lk46tfzevu/cancel"
        }
    },
    "latest_version": {
        "id": "5d78bcd7a992c4b793465bcdcf551dc2ab9668d12bb7aa714557a21c1e77041c",
        "created_at": "2024-02-17T20:20:56.733439+00:00",
        "cog_version": "0.9.0-beta10",
        "openapi_schema": {
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "paths": {
                "/": {
                    "get": {
                        "summary": "Root",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Root  Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "root__get"
                    }
                },
                "/shutdown": {
                    "post": {
                        "summary": "Start Shutdown",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Start Shutdown Shutdown Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "start_shutdown_shutdown_post"
                    }
                },
                "/predictions": {
                    "post": {
                        "summary": "Predict",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PredictionRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "/health-check": {
                    "get": {
                        "summary": "Healthcheck",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Healthcheck Health Check Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "healthcheck_health_check_get"
                    }
                },
                "/predictions/{prediction_id}": {
                    "put": {
                        "summary": "Predict Idempotent",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            },
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model (idempotent creation).",
                        "operationId": "predict_idempotent_predictions__prediction_id__put",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/PredictionRequest"
                                            }
                                        ],
                                        "title": "Prediction Request"
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                },
                "/predictions/{prediction_id}/cancel": {
                    "post": {
                        "summary": "Cancel",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            }
                        ],
                        "description": "Cancel a running prediction",
                        "operationId": "cancel_predictions__prediction_id__cancel_post"
                    }
                }
            },
            "openapi": "3.0.2",
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "title": "Input",
                        "required": [
                            "prompt"
                        ],
                        "properties": {
                            "top_k": {
                                "type": "integer",
                                "title": "Top K",
                                "default": 50,
                                "x-order": 4,
                                "description": "The number of highest probability tokens to consider for generating the output. If > 0, only keep the top k tokens with highest probability (top-k filtering)."
                            },
                            "top_p": {
                                "type": "number",
                                "title": "Top P",
                                "default": 0.9,
                                "x-order": 3,
                                "description": "A probability threshold for generating the output. If < 1.0, only keep the top tokens with cumulative probability >= top_p (nucleus filtering). Nucleus filtering is described in Holtzman et al. (http://arxiv.org/abs/1904.09751)."
                            },
                            "prompt": {
                                "type": "string",
                                "title": "Prompt",
                                "x-order": 0
                            },
                            "temperature": {
                                "type": "number",
                                "title": "Temperature",
                                "default": 0.6,
                                "x-order": 2,
                                "description": "The value used to modulate the next token probabilities."
                            },
                            "max_new_tokens": {
                                "type": "integer",
                                "title": "Max New Tokens",
                                "default": 512,
                                "x-order": 1,
                                "description": "The maximum number of tokens the model should generate as output."
                            },
                            "prompt_template": {
                                "type": "string",
                                "title": "Prompt Template",
                                "default": "<s>[INST] {prompt} [/INST] ",
                                "x-order": 7,
                                "description": "The template used to format the prompt. The input prompt is inserted into the template using the `{prompt}` placeholder."
                            },
                            "presence_penalty": {
                                "type": "number",
                                "title": "Presence Penalty",
                                "default": 0,
                                "x-order": 5,
                                "description": "Presence penalty"
                            },
                            "frequency_penalty": {
                                "type": "number",
                                "title": "Frequency Penalty",
                                "default": 0,
                                "x-order": 6,
                                "description": "Frequency penalty"
                            }
                        }
                    },
                    "Output": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Output",
                        "x-cog-array-type": "iterator",
                        "x-cog-array-display": "concatenate"
                    },
                    "Status": {
                        "enum": [
                            "starting",
                            "processing",
                            "succeeded",
                            "canceled",
                            "failed"
                        ],
                        "type": "string",
                        "title": "Status",
                        "description": "An enumeration."
                    },
                    "WebhookEvent": {
                        "enum": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "type": "string",
                        "title": "WebhookEvent",
                        "description": "An enumeration."
                    },
                    "ValidationError": {
                        "type": "object",
                        "title": "ValidationError",
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "properties": {
                            "loc": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location"
                            },
                            "msg": {
                                "type": "string",
                                "title": "Message"
                            },
                            "type": {
                                "type": "string",
                                "title": "Error Type"
                            }
                        }
                    },
                    "PredictionRequest": {
                        "type": "object",
                        "title": "PredictionRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "start",
                                    "output",
                                    "logs",
                                    "completed"
                                ]
                            }
                        }
                    },
                    "PredictionResponse": {
                        "type": "object",
                        "title": "PredictionResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "HTTPValidationError": {
                        "type": "object",
                        "title": "HTTPValidationError",
                        "properties": {
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail"
                            }
                        }
                    }
                }
            }
        }
    }
}